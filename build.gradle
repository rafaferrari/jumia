buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

if (!hasProperty('mainClass')) {
    ext.mainClass = mainClass
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")    
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("commons-cli:commons-cli:1.3")
    compile("com.google.code.gson:gson:2.8.0")
    compile("com.google.guava:guava:22.0")
    compile("com.h2database:h2")  
    compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.2.10.Final'
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

jar {
    baseName = 'orders'
    
    into('lib') {
        from configurations.runtime
    }
    
    doFirst {
        manifest {
            attributes "Implementation-Title": "Jumia"
            attributes "Implementation-Version": version
            attributes "Main-Class" : mainClass
            attributes "Built-Date": new Date()
            attributes "Built-JDK": System.getProperty('java.version')
            attributes "Class-Path": configurations.runtime.collect { 'lib/' + it.getName() }.join(' ')
        }
    
        from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
            include 'com/jumia/'
            exclude 'META-INF/'
        }
    }    
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
